diff --git a/src/attestor-handlers/attestor-handler.ts b/src/attestor-handlers/attestor-handler.ts
index 9e48880..91d73c5 100644
--- a/src/attestor-handlers/attestor-handler.ts
+++ b/src/attestor-handlers/attestor-handler.ts
@@ -50,4 +50,33 @@ export class AttestorHandler {
       );
     }
   }
+
+  async submitWithdrawRequest(vaultUUID: string, withdrawPSBT: string): Promise<void> {
+    const withdrawEndpoints = this.attestorRootURLs.map(url => `${url}/app/withdraw`);
+
+    const body = JSON.stringify({
+      uuid: vaultUUID,
+      withdraw_psbt: withdrawPSBT,
+    });
+
+    const requests = withdrawEndpoints.map(async url =>
+      fetch(url, {
+        method: 'POST',
+        headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },
+        body,
+      })
+        .then(response => (response.ok ? true : response.statusText))
+        .catch(error => error.message)
+    );
+
+    const responses = await Promise.all(requests);
+
+    const failedResponses = responses.filter(response => response !== true);
+
+    if (failedResponses.length === withdrawEndpoints.length) {
+      throw new AttestorError(
+        `Error sending Withdraw Transaction to Attestors: ${failedResponses.join(', ')}`
+      );
+    }
+  }
 }
diff --git a/src/models/ethereum-models.ts b/src/models/ethereum-models.ts
index 53f1634..1cf649f 100644
--- a/src/models/ethereum-models.ts
+++ b/src/models/ethereum-models.ts
@@ -17,6 +17,7 @@ export enum VaultState {
   'Funded',
   'Closing',
   'Closed',
+  'RedeemPending',
   'Funding',
 }
 
@@ -25,10 +26,12 @@ export interface RawVault {
   protocolContract: string;
   timestamp: BigNumber;
   valueLocked: BigNumber;
+  valueMinted: BigNumber;
   creator: string;
   status: number;
   fundingTxId: string;
   closingTxId: string;
+  withdrawTxId: string;
   btcFeeRecipient: string;
   btcMintFeeBasisPoints: BigNumber;
   btcRedeemFeeBasisPoints: BigNumber;
diff --git a/src/network-handlers/ethereum-handler.ts b/src/network-handlers/ethereum-handler.ts
index 6eada24..a8f6c0a 100644
--- a/src/network-handlers/ethereum-handler.ts
+++ b/src/network-handlers/ethereum-handler.ts
@@ -65,6 +65,16 @@ export class EthereumHandler {
     }
   }
 
+  async withdraw(vaultUUID: string, amount: BigInt) {
+    try {
+      await this.ethereumContracts.protocolContract.callStatic.withdraw(vaultUUID, amount);
+      const transaction = await this.ethereumContracts.protocolContract.withdraw(vaultUUID, amount);
+      return await transaction.wait();
+    } catch (error: any) {
+      throw new EthereumError(`Unable to perform withdraw: ${error}`);
+    }
+  }
+
   async closeVault(vaultUUID: string) {
     try {
       await this.ethereumContracts.protocolContract.callStatic.closeVault(vaultUUID);
